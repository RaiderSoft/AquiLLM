"""
Django settings for aquillm project.

Generated by 'django-admin startproject' using Django 5.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
if os.environ.get('DJANGO_DEBUG'):
    print("Debug is enabled.")
    DEBUG = True

SECRET_KEY = ""
if DEBUG:
    SECRET_KEY = "django-insecure-_fj8e0)w#wu48c673prc3$%+h36!df0#)0upbl6t%x#_w3zk60"
else:
    SECRET_KEY = os.environ.get('SECRET_KEY')

# Application definition

INSTALLED_APPS = [
    "daphne",
    "chat",
    "ingest",
    "django.contrib.sites",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    "aquillm",
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    "django_extensions",
    'django.contrib.postgres',
    'debug_toolbar',
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'allauth.account.middleware.AccountMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware'
]

ROOT_URLCONF = "aquillm.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates', BASE_DIR / 'templates' / 'allauth'],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "aquillm.context_processors.nav_links",
            ],
        },
    },
]

WSGI_APPLICATION = "aquillm.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

POSTGRES_USER = os.environ.get("POSTGRES_USER")
POSTGRES_HOST = os.environ.get("POSTGRES_HOST")
POSTGRES_NAME = os.environ.get("POSTGRES_NAME")
POSTGRES_PASSWORD = os.environ.get("POSTGRES_PASSWORD")

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": POSTGRES_NAME,
        "USER": POSTGRES_USER,
        "PASSWORD": POSTGRES_PASSWORD,
        "HOST": POSTGRES_HOST,
        "PORT": "5432",
        "TEST": {
            'NAME': 'test'
        }
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = "static/"
STATIC_ROOT = "prod_static/"

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# authentication stuff

SOCIALACCOUNT_LOGIN_ON_GET=True

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
    ]

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'
ACCOUNT_ADAPTER = 'aquillm.adapters.NoDefaultAccounts'
SOCIALACCOUNT_ADAPTER = 'aquillm.adapters.RestrictDomains'
SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': os.getenv("GOOGLE_OAUTH2_CLIENT_ID"),
            'secret': os.getenv("GOOGLE_OAUTH2_CLIENT_SECRET"),
            'key': ''
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
        },
        'OAUTH_PKCE_ENABLED': True,
        'FETCH_USERINFO' : True
    }
}

SITE_ID = 1

INTERNAL_IPS = [
    "127.0.0.1",
]

X_FRAME_OPTIONS = "SAMEORIGIN"
USE_TZ=True
DATA_UPLOAD_MAX_MEMORY_SIZE=  268435456
ALLOWED_HOSTS =['aquillm.space', 'www.aquillm.space', 'localhost', 'alpha.aquillm.space', 'beta.aquillm.space']
ALLOWED_HOSTS += [os.getenv("HOST_NAME")]

ASGI_APPLICATION = "aquillm.asgi.application"


STORAGES = {
    "default": {
        "BACKEND": "storages.backends.s3.S3Storage",
        "OPTIONS": {
            "endpoint_url": "http://" + os.getenv("STORAGE_HOST"),
            "access_key": os.getenv("STORAGE_ACCESS_KEY"),
            "secret_key": os.getenv("STORAGE_SECRET_KEY"),

            "bucket_name": "aquillm",
            "file_overwrite": False,
        }
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    }
}

CSRF_TRUSTED_ORIGINS =['https://' + os.getenv("HOST_NAME")]


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [('redis', 6379)],
        },
    }
}

CELERY_BROKER_URL = "redis://redis:6379"
CELERY_RESULT_BACKEND = "redis://redis:6379"
CELERY_ACCEPT_CONTENT = ['pickle', 'json']

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # Define log formatters
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        # Custom filter to exclude file monitoring logs
        'exclude_file_monitoring': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': lambda record: not ('first seen with mtime' in record.getMessage() or 
                                           'File ' in record.getMessage() and '.py' in record.getMessage())
        },
        # Custom filter to exclude migration-related file logs
        'exclude_migrations': {
            '()': 'django.utils.log.CallbackFilter',
            'callback': lambda record: not ('migrations' in record.getMessage())
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',  # Changed from DEBUG to INFO
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
            'filters': ['exclude_file_monitoring', 'exclude_migrations'],
        },
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'debug.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        # Django's default logger - reduce verbosity
        'django': {
            'handlers': ['console', 'file'],
            'level': 'WARNING',  # Changed from DEBUG to WARNING
            'propagate': False,
        },
        # Django's file watcher logger - explicitly silence
        'django.utils.autoreload': {
            'level': 'WARNING',
            'propagate': False,
        },
        # Your application's logger - keep detailed
        'aquillm': {
            'handlers': ['console', 'file'],
            'level': 'INFO',  # Changed from DEBUG to INFO for console output
            'propagate': False,
        },
    },
}